var l=Object.defineProperty;var h=(o,e,t)=>e in o?l(o,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[e]=t;var c=(o,e,t)=>h(o,typeof e!="symbol"?e+"":e,t);const d=typeof window<"u"&&window.location.hostname==="localhost",g={sync:{get:async o=>{const e=localStorage.getItem(`chrome.storage.sync.${o}`);return e?JSON.parse(e):{}},set:async o=>{Object.entries(o).forEach(([e,t])=>{localStorage.setItem(`chrome.storage.sync.${e}`,JSON.stringify(t))})}}},i=d?g:chrome.storage;class f{constructor(){c(this,"defaultSettings",{preferredSource:"random",showSource:!0,favoriteQuotes:[],lastFetchTime:0,selectedTheme:"default",themeMode:"system",selectedLightFont:"elegant",selectedDarkFont:"monospace",fontFollowsTheme:!0,selectedQuoteFont:"elegant"})}async getSettings(){try{const e=await i.sync.get("settings");return{...this.defaultSettings,...e.settings}}catch(e){return console.warn("Storage service error:",e),this.defaultSettings}}async saveSettings(e){try{const s={...await this.getSettings(),...e};await i.sync.set({settings:s})}catch(t){console.warn("Storage service error:",t)}}async cacheQuote(e){try{const t={...e,timestamp:Date.now()};await this.saveSettings({cachedQuote:t,lastFetchTime:Date.now()})}catch(t){console.warn("Cache quote error:",t)}}async getCachedQuote(){try{const t=(await this.getSettings()).cachedQuote;return t&&Date.now()-t.timestamp<24*60*60*1e3?t:null}catch(e){return console.warn("Get cached quote error:",e),null}}async shouldFetchNewQuote(){try{const e=await this.getSettings();return Date.now()-e.lastFetchTime>10*60*1e3}catch(e){return console.warn("Should fetch new quote error:",e),!0}}async getSelectedTheme(){try{return(await this.getSettings()).selectedTheme}catch(e){return console.warn("Get selected theme error:",e),"default"}}async saveSelectedTheme(e){try{await this.saveSettings({selectedTheme:e})}catch(t){console.warn("Save selected theme error:",t)}}async getSelectedQuoteFont(){try{return(await this.getSettings()).selectedQuoteFont||"classic"}catch(e){return console.warn("Get selected quote font error:",e),"classic"}}async saveSelectedQuoteFont(e){try{await this.saveSettings({selectedQuoteFont:e})}catch(t){console.warn("Save selected quote font error:",t)}}async getSelectedUIFont(){try{return(await this.getSettings()).selectedUIFont||"readable"}catch(e){return console.warn("Get selected UI font error:",e),"readable"}}async saveSelectedUIFont(e){try{await this.saveSettings({selectedUIFont:e})}catch(t){console.warn("Save selected UI font error:",t)}}async cachePrefetchedQuote(e){try{const t={...e,timestamp:Date.now()};await this.saveSettings({prefetchedQuote:t})}catch(t){console.warn("Cache prefetched quote error:",t)}}async getPrefetchedQuote(){try{const t=(await this.getSettings()).prefetchedQuote;return t&&Date.now()-t.timestamp<60*60*1e3?t:null}catch(e){return console.warn("Get prefetched quote error:",e),null}}async consumePrefetchedQuote(){try{const e=await this.getPrefetchedQuote();return e&&(await this.cacheQuote(e),await this.saveSettings({prefetchedQuote:void 0})),e}catch(e){return console.warn("Consume prefetched quote error:",e),null}}}const a=new f,u=[{text:"The only way to do great work is to love what you do.",author:"Steve Jobs",source:"Built-in"},{text:"Innovation distinguishes between a leader and a follower.",author:"Steve Jobs",source:"Built-in"},{text:"The future belongs to those who believe in the beauty of their dreams.",author:"Eleanor Roosevelt",source:"Built-in"},{text:"It is during our darkest moments that we must focus to see the light.",author:"Aristotle",source:"Built-in"},{text:"Success is not final, failure is not fatal: it is the courage to continue that counts.",author:"Winston Churchill",source:"Built-in"}],r=typeof window<"u"&&window.location.hostname==="localhost";class w{getRandomFallback(){const e=Math.floor(Math.random()*u.length);return u[e]}async fetchFromZenQuotes(){try{r&&console.log("Fetching from ZenQuotes...");const t=await(await fetch("https://zenquotes.io/api/random")).json();if(t&&t.length>0){const s={text:t[0].q,author:t[0].a,source:"ZenQuotes"};return r&&console.log("ZenQuotes response:",s),s}throw new Error("No quote data received")}catch(e){throw r&&console.warn("ZenQuotes fetch failed:",e),e}}async fetchFromQuoteGarden(){try{r&&console.log("Fetching from QuoteGarden...");const t=await(await fetch("https://quote-garden.herokuapp.com/api/v3/quotes/random")).json();if(t&&t.statusCode===200&&t.data){const s={text:t.data.quoteText.replace(/[""]/g,""),author:t.data.quoteAuthor,source:"Quote Garden"};return r&&console.log("QuoteGarden response:",s),s}throw new Error("No quote data received")}catch(e){throw r&&console.warn("QuoteGarden fetch failed:",e),e}}async getRandomQuote(){r&&console.log("Getting random quote...");const e=[()=>this.fetchFromZenQuotes(),()=>this.fetchFromQuoteGarden()];for(const t of e)try{return await t()}catch{continue}return r&&console.log("All APIs failed, using fallback quote"),this.getRandomFallback()}async getTodaysQuote(){try{r&&console.log("Getting today's quote...");const t=await(await fetch("https://zenquotes.io/api/today")).json();if(t&&t.length>0){const s={text:t[0].q,author:t[0].a,source:"ZenQuotes (Today)"};return r&&console.log("Today's quote response:",s),s}throw new Error("No today quote available")}catch(e){return r&&console.warn("Today's quote fetch failed, falling back to random:",e),this.getRandomQuote()}}async prefetchNextQuote(){try{r&&console.log("Prefetching next quote...");const e=await this.getRandomQuote();await a.cachePrefetchedQuote({...e,source:e.source??"Unknown"}),r&&console.log("Next quote prefetched:",e)}catch(e){r&&console.warn("Prefetch failed:",e)}}}const n=new w;chrome.runtime.onInstalled.addListener(async()=>{chrome.alarms.create("dailyQuote",{delayInMinutes:0,periodInMinutes:24*60});const o=await n.getTodaysQuote();await a.cacheQuote({text:o.text,author:o.author,source:o.source||"Unknown"})});chrome.alarms.onAlarm.addListener(async o=>{if(o.name==="dailyQuote"){const e=await n.getTodaysQuote();await a.cacheQuote({text:e.text,author:e.author,source:e.source||"Unknown"}),await n.prefetchNextQuote()}});export{n as q,a as s};
