var c=Object.defineProperty;var u=(o,t,e)=>t in o?c(o,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[t]=e;var s=(o,t,e)=>u(o,typeof t!="symbol"?t+"":t,e);const n=[{text:"The only way to do great work is to love what you do.",author:"Steve Jobs",source:"Built-in"},{text:"Innovation distinguishes between a leader and a follower.",author:"Steve Jobs",source:"Built-in"},{text:"The future belongs to those who believe in the beauty of their dreams.",author:"Eleanor Roosevelt",source:"Built-in"},{text:"It is during our darkest moments that we must focus to see the light.",author:"Aristotle",source:"Built-in"},{text:"Success is not final, failure is not fatal: it is the courage to continue that counts.",author:"Winston Churchill",source:"Built-in"}];class h{getRandomFallback(){const t=Math.floor(Math.random()*n.length);return n[t]}async fetchFromZenQuotes(){try{const e=await(await fetch("https://zenquotes.io/api/random")).json();if(e&&e.length>0)return{text:e[0].q,author:e[0].a,source:"ZenQuotes"};throw new Error("No quote data received")}catch(t){throw t}}async fetchFromQuoteGarden(){try{const e=await(await fetch("https://quote-garden.herokuapp.com/api/v3/quotes/random")).json();if(e&&e.statusCode===200&&e.data)return{text:e.data.quoteText.replace(/[""]/g,""),author:e.data.quoteAuthor,source:"Quote Garden"};throw new Error("No quote data received")}catch(t){throw t}}async getRandomQuote(){const t=[()=>this.fetchFromZenQuotes(),()=>this.fetchFromQuoteGarden()];for(const e of t)try{return await e()}catch{continue}return this.getRandomFallback()}async getTodaysQuote(){try{const e=await(await fetch("https://zenquotes.io/api/today")).json();if(e&&e.length>0)return{text:e[0].q,author:e[0].a,source:"ZenQuotes (Today)"};throw new Error("No today quote available")}catch{return this.getRandomQuote()}}}const r=new h;class d{constructor(){s(this,"defaultSettings",{preferredSource:"random",showSource:!0,favoriteQuotes:[],lastFetchTime:0,selectedTheme:"default"})}async getSettings(){const t=await chrome.storage.sync.get("settings");return{...this.defaultSettings,...t.settings}}async saveSettings(t){const a={...await this.getSettings(),...t};await chrome.storage.sync.set({settings:a})}async cacheQuote(t){const e={...t,timestamp:Date.now()};await this.saveSettings({cachedQuote:e,lastFetchTime:Date.now()})}async getCachedQuote(){const e=(await this.getSettings()).cachedQuote;return e&&Date.now()-e.timestamp<24*60*60*1e3?e:null}async shouldFetchNewQuote(){const t=await this.getSettings();return Date.now()-t.lastFetchTime>10*60*1e3}async getSelectedTheme(){return(await this.getSettings()).selectedTheme}async saveSelectedTheme(t){await this.saveSettings({selectedTheme:t})}}const i=new d;chrome.runtime.onInstalled.addListener(async()=>{chrome.alarms.create("dailyQuote",{delayInMinutes:0,periodInMinutes:24*60});const o=await r.getTodaysQuote();await i.cacheQuote({text:o.text,author:o.author,source:o.source||"Unknown"})});chrome.alarms.onAlarm.addListener(async o=>{if(o.name==="dailyQuote"){const t=await r.getTodaysQuote();await i.cacheQuote({text:t.text,author:t.author,source:t.source||"Unknown"})}});export{r as q,i as s};
